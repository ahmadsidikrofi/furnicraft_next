// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model furnitures {
  id             Int              @id @default(autoincrement())
  nama_furniture String           @db.VarChar(255)
  slug           String           @unique
  deskripsi      String           @db.Text
  harga          Float
  categories     String           @db.VarChar(155)
  image          String?          @db.Text
  store_id       Int
  Store          Store?           @relation(fields: [store_id], references: [id])
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  OrderFurniture OrderFurniture[]

  @@index([store_id, nama_furniture, slug])
}

model cart {
  id             Int     @id @default(autoincrement())
  id_furniture   Int
  user_email     String? @db.VarChar(255)
  nama_furniture String  @db.VarChar(255)
  slug           String
  harga          Float
  categories     String  @db.VarChar(155)
  image          String? @db.Text

  @@unique([slug, user_email])
}

model Store {
  id             Int              @id @default(autoincrement())
  nama_toko      String
  slug           String?          @unique
  deskripsi      String?          @db.Text
  telp           String?
  user_email     String           @db.VarChar(255)
  furniture      furnitures[]
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  OrderFurniture OrderFurniture[]

  @@index([user_email, slug])
}

model Orders {
  id             String           @id
  user_email     String
  total_harga    Float
  token          String
  status         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  OrderFurniture OrderFurniture[]

  @@index([user_email])
}

model OrderFurniture {
  id          Int        @id @default(autoincrement())
  orderId     String
  furnitureId Int
  storeId     Int
  orders      Orders     @relation(fields: [orderId], references: [id])
  furnitures  furnitures @relation(fields: [furnitureId], references: [id])
  store       Store      @relation(fields: [storeId], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@index([orderId, furnitureId, storeId])
}
